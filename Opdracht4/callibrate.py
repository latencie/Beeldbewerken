from pylab import *


def main():
    XYZ = array([
                [0, -5, 5], [0, -3, 5], [0, -1, 5], [-1, 0 ,5],
                [-3, 0, 5], [-5, 0 , 5], [0, -5, 3], [0, -3, 3],
                [0, -1, 3], [-1, 0, 3], [-3, 0, 3], [-5, 0 ,3],
                [0, -5, 1], [0, -3, 1], [0, -1, 1], [-1, 0 ,1],
                [-3, 0, 1], [-5, 0 ,1]
                ])

    xy = array([
                [213.1027, 170.0499], [258.1908, 181.3219],
                [306.41, 193.8464], [351.498, 183.8268],
                [382.8092, 155.6468], [411.6155, 130.5978],
                [223.7485, 218.2691], [267.5841, 230.7935],
                [314.5509, 244.5705], [357.7603, 235.1771],
                [387.819, 205.1184], [415.3728, 178.1908],
                [234.3943, 263.9834], [276.9775, 277.1341],
                [323.318, 291.5372], [363.3963, 282.1438],
                [392.8288, 251.4589], [419.1301, 223.9051]
                ])

    # im = imread("calibrationpoints.jpg")
    # imshow(im)
    # plot(xy[:,0],xy[:,1],'d')
    # show()

    P = callibrate(xy, XYZ)

    print P

def callibrate(xy, XYZ):
    matrix = zeros(shape = (2 * len(xy), 12))

    for i in range(len(xy)):
        matrix[2 * i - 1] = [XYZ[i][0], XYZ[i][1], XYZ[i][2], 1, 0, 0, 0, 0,
                            -xy[i][0] * XYZ[i][0], -xy[i][0] * XYZ[i][1],
                            -xy[i][0] * XYZ[i][2], -xy[i][0]] 
        matrix[2 * i] = [0, 0, 0, 0, XYZ[i][0], XYZ[i][1], XYZ[i][2], 1,
                        -xy[i][1] * XYZ[i][0], -xy[i][1] * XYZ[i][1],
                        -xy[i][1] * XYZ[i][2], -xy[i][1]]

    U, D, V = svd(matrix)


    P = V[-1].reshape(3, 4)

    return P

if __name__ == "__main__":
    main()